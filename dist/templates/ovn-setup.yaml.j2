{% if in_upgrade != "true" -%}
---
# ovn-namespace.yaml
#
# Setup for Kubernetes to support the ovn-kubernetes plugin
#
# Create the namespace for ovn-kubernetes.
#
# This provisioning is done as part of installation after the cluster is
# up and before the ovn daemonsets are created.

apiVersion: v1
kind: Namespace
metadata:
  name: ovn-kubernetes

---
# ovn-policy.yaml
#
# Setup for Kubernetes to support the ovn-kubernetes plugin
#
# Create the service account and policies.
# ovnkube interacts with kubernetes and the environment
# must be properly set up.
# 
# This provisioning is done as part of installation after the cluster is
# up and before the ovn daemonsets are created.

{%- endif %}

---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  namespace: ovn-kubernetes
  name: ovn-k8s-configmap
rules:
- apiGroups: [""]
  resources: ["configmaps"]
  verbs: ["get", "watch", "list"]
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - get
  - list
  - update

{% if in_upgrade != "true" -%}
---

# The network cidr and service cidr are set in the ovn-config configmap
kind: ConfigMap
apiVersion: v1
metadata:
  name: ovn-config
  namespace: ovn-kubernetes
data:
  net_cidr:      "{{ net_cidr }}"
  svc_cidr:      "{{ svc_cidr }}"
  k8s_apiserver: "{{ k8s_apiserver }}"
  mtu:           "{{ mtu_value }}"
  host_network_namespace: "{{ host_network_namespace }}"


---
# ovn-host-network-namespace.yaml
#
# Create the namespace for classifying host network traffic.
#
# This provisioning is done as part of installation after the cluster is
# up and before the ovn daemonsets are created.

apiVersion: v1
kind: Namespace
metadata:
  name: "{{ host_network_namespace }}"
{%- endif %}

{% if advertise_default_network == "true" -%}
---
apiVersion: k8s.ovn.org/v1
kind: RouteAdvertisements
metadata:
  name: default
spec:
  networkSelector:
    matchLabels:
      k8s.ovn.org/default-network: ""
  advertisements:
    - "PodNetwork"
{%- endif %}
