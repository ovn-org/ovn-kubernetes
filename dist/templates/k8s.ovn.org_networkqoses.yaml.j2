---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.16.4
  name: networkqoses.k8s.ovn.org
spec:
  group: k8s.ovn.org
  names:
    kind: NetworkQoS
    listKind: NetworkQoSList
    plural: networkqoses
    singular: networkqos
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.status
      name: Status
      type: string
    name: v1
    schema:
      openAPIV3Schema:
        description: |-
          NetworkQoS is a CRD that allows the user to define a DSCP marking and metering
          for pods ingress/egress traffic on its namespace to specified CIDRs,
          protocol and port. Traffic belong these pods will be checked against
          each Rule in the namespace's NetworkQoS, and if there is a match the traffic
          is marked with relevant DSCP value and enforcing specified policing/shaping
          parameters.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: Spec defines the desired state of NetworkQoS
            properties:
              egress:
                description: egress a collection of Egress NetworkQoS rule objects
                items:
                  properties:
                    bandwidth:
                      description: |-
                        Bandwidth controls the maximum of rate traffic that can be sent
                        or received on the matching packets.
                      properties:
                        burst:
                          description: |-
                            burst The value of burst rate limit in kilobits.
                            This also needs rate to be specified.
                          format: int32
                          maximum: 4294967295
                          minimum: 1
                          type: integer
                        rate:
                          description: |-
                            rate The value of rate limit in kbps. Traffic over the limit
                            will be dropped.
                          format: int32
                          maximum: 4294967295
                          minimum: 1
                          type: integer
                      type: object
                    classifier:
                      description: |-
                        classifier The classifier on which packets should match
                        to apply the NetworkQoS Rule.
                        This field is optional, and in case it is not set the rule is applied
                        to all egress traffic regardless of the destination.
                      properties:
                        port:
                          description: |-
                            Port specifies destination protocol and port on which NetworkQoS
                            rule is applied
                          properties:
                            port:
                              description: port that the traffic must match
                              format: int32
                              maximum: 65535
                              minimum: 1
                              type: integer
                            protocol:
                              description: protocol (tcp, udp, sctp) that the traffic
                                must match.
                              pattern: ^TCP|UDP|SCTP$
                              type: string
                          type: object
                        to:
                          items:
                            description: |-
                              Destination describes a peer to apply NetworkQoS configuration for the outgoing traffic.
                              Only certain combinations of fields are allowed.
                            properties:
                              ipBlock:
                                description: |-
                                  ipBlock defines policy on a particular IPBlock. If this field is set then
                                  neither of the other fields can be.
                                properties:
                                  cidr:
                                    description: |-
                                      cidr is a string representing the IPBlock
                                      Valid examples are "192.168.1.0/24" or "2001:db8::/64"
                                    type: string
                                  except:
                                    description: |-
                                      except is a slice of CIDRs that should not be included within an IPBlock
                                      Valid examples are "192.168.1.0/24" or "2001:db8::/64"
                                      Except values will be rejected if they are outside the cidr range
                                    items:
                                      type: string
                                    type: array
                                    x-kubernetes-list-type: atomic
                                required:
                                - cidr
                                type: object
                              namespaceSelector:
                                description: |-
                                  namespaceSelector selects namespaces using cluster-scoped labels. This field follows
                                  standard label selector semantics; if present but empty, it selects all namespaces.

                                  If podSelector is also set, then the NetworkQoS as a whole selects
                                  the pods matching podSelector in the namespaces selected by namespaceSelector.
                                  Otherwise it selects all pods in the namespaces selected by namespaceSelector.
                                properties:
                                  matchExpressions:
                                    description: matchExpressions is a list of label
                                      selector requirements. The requirements are
                                      ANDed.
                                    items:
                                      description: |-
                                        A label selector requirement is a selector that contains values, a key, and an operator that
                                        relates the key and values.
                                      properties:
                                        key:
                                          description: key is the label key that the
                                            selector applies to.
                                          type: string
                                        operator:
                                          description: |-
                                            operator represents a key's relationship to a set of values.
                                            Valid operators are In, NotIn, Exists and DoesNotExist.
                                          type: string
                                        values:
                                          description: |-
                                            values is an array of string values. If the operator is In or NotIn,
                                            the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                            the values array must be empty. This array is replaced during a strategic
                                            merge patch.
                                          items:
                                            type: string
                                          type: array
                                          x-kubernetes-list-type: atomic
                                      required:
                                      - key
                                      - operator
                                      type: object
                                    type: array
                                    x-kubernetes-list-type: atomic
                                  matchLabels:
                                    additionalProperties:
                                      type: string
                                    description: |-
                                      matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                      map is equivalent to an element of matchExpressions, whose key field is "key", the
                                      operator is "In", and the values array contains only "value". The requirements are ANDed.
                                    type: object
                                type: object
                                x-kubernetes-map-type: atomic
                              podSelector:
                                description: |-
                                  podSelector is a label selector which selects pods. This field follows standard label
                                  selector semantics; if present but empty, it selects all pods.

                                  If namespaceSelector is also set, then the NetworkQoS as a whole selects
                                  the pods matching podSelector in the Namespaces selected by NamespaceSelector.
                                  Otherwise it selects the pods matching podSelector in the NetworkQoS's own namespace.
                                properties:
                                  matchExpressions:
                                    description: matchExpressions is a list of label
                                      selector requirements. The requirements are
                                      ANDed.
                                    items:
                                      description: |-
                                        A label selector requirement is a selector that contains values, a key, and an operator that
                                        relates the key and values.
                                      properties:
                                        key:
                                          description: key is the label key that the
                                            selector applies to.
                                          type: string
                                        operator:
                                          description: |-
                                            operator represents a key's relationship to a set of values.
                                            Valid operators are In, NotIn, Exists and DoesNotExist.
                                          type: string
                                        values:
                                          description: |-
                                            values is an array of string values. If the operator is In or NotIn,
                                            the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                            the values array must be empty. This array is replaced during a strategic
                                            merge patch.
                                          items:
                                            type: string
                                          type: array
                                          x-kubernetes-list-type: atomic
                                      required:
                                      - key
                                      - operator
                                      type: object
                                    type: array
                                    x-kubernetes-list-type: atomic
                                  matchLabels:
                                    additionalProperties:
                                      type: string
                                    description: |-
                                      matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                      map is equivalent to an element of matchExpressions, whose key field is "key", the
                                      operator is "In", and the values array contains only "value". The requirements are ANDed.
                                    type: object
                                type: object
                                x-kubernetes-map-type: atomic
                            type: object
                            x-kubernetes-validations:
                            - message: Can't specify both podSelector/namespaceSelector
                                and ipBlock
                              rule: '!(has(self.ipBlock) && (has(self.podSelector)
                                || has(self.namespaceSelector)))'
                          type: array
                      type: object
                    dscp:
                      description: dscp marking value for matching pods' traffic.
                      maximum: 63
                      minimum: 0
                      type: integer
                    priority:
                      description: |-
                        priority The NetworkQoS rule’s priority. Rules with numerically higher
                        priority take precedence over those with lower. If two NetworkQoS
                        rules with the same priority both match, then the one
                        actually applied to a packet is undefined.
                      maximum: 32767
                      minimum: 0
                      type: integer
                  required:
                  - dscp
                  - priority
                  type: object
                type: array
              netAttachRefs:
                description: |-
                  netAttachRefs points to a list of objects which could be either NAD, UDN, or Cluster UDN.
                  In the case of NAD, the network type could be fo type Layer-3, Layer-2, or Localnet.
                  If not specified, then the primary network of the selected Pods wil be chosen.
                items:
                  description: ObjectReference contains enough information to let
                    you inspect or modify the referred object.
                  properties:
                    apiVersion:
                      description: API version of the referent.
                      type: string
                    fieldPath:
                      description: |-
                        If referring to a piece of an object instead of an entire object, this string
                        should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2].
                        For example, if the object reference is to a container within a pod, this would take on a value like:
                        "spec.containers{name}" (where "name" refers to the name of the container that triggered
                        the event) or if no container name is specified "spec.containers[2]" (container with
                        index 2 in this pod). This syntax is chosen only to have some well-defined way of
                        referencing a part of an object.
                      type: string
                    kind:
                      description: |-
                        Kind of the referent.
                        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                      type: string
                    name:
                      description: |-
                        Name of the referent.
                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      type: string
                    namespace:
                      description: |-
                        Namespace of the referent.
                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
                      type: string
                    resourceVersion:
                      description: |-
                        Specific resourceVersion to which this reference is made, if any.
                        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
                      type: string
                    uid:
                      description: |-
                        UID of the referent.
                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
                      type: string
                  type: object
                  x-kubernetes-map-type: atomic
                type: array
                x-kubernetes-validations:
                - message: netAttachRefs is immutable
                  rule: self == oldSelf
                - message: '"kind" of netAttachRef must be "NetworkAttachmentDefinition"'
                  rule: self.all(nad, nad.kind == 'NetworkAttachmentDefinition')
              podSelector:
                description: |-
                  podSelector applies the NetworkQoS rule only to the pods in the namespace whose label
                  matches this definition. This field is optional, and in case it is not set
                  results in the rule being applied to all pods in the namespace.
                properties:
                  matchExpressions:
                    description: matchExpressions is a list of label selector requirements.
                      The requirements are ANDed.
                    items:
                      description: |-
                        A label selector requirement is a selector that contains values, a key, and an operator that
                        relates the key and values.
                      properties:
                        key:
                          description: key is the label key that the selector applies
                            to.
                          type: string
                        operator:
                          description: |-
                            operator represents a key's relationship to a set of values.
                            Valid operators are In, NotIn, Exists and DoesNotExist.
                          type: string
                        values:
                          description: |-
                            values is an array of string values. If the operator is In or NotIn,
                            the values array must be non-empty. If the operator is Exists or DoesNotExist,
                            the values array must be empty. This array is replaced during a strategic
                            merge patch.
                          items:
                            type: string
                          type: array
                          x-kubernetes-list-type: atomic
                      required:
                      - key
                      - operator
                      type: object
                    type: array
                    x-kubernetes-list-type: atomic
                  matchLabels:
                    additionalProperties:
                      type: string
                    description: |-
                      matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                      map is equivalent to an element of matchExpressions, whose key field is "key", the
                      operator is "In", and the values array contains only "value". The requirements are ANDed.
                    type: object
                type: object
                x-kubernetes-map-type: atomic
            required:
            - egress
            type: object
          status:
            description: Status defines the observed state of NetworkQoS
            properties:
              conditions:
                description: An array of condition objects indicating details about
                  status of NetworkQoS object.
                items:
                  description: Condition contains details for one aspect of the current
                    state of this API Resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              status:
                description: A concise indication of whether the NetworkQoS resource
                  is applied with success.
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
