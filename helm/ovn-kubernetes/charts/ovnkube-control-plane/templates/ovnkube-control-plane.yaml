# ovnkube-control-plane
# daemonset version 3
# starts ovnkube-cluster-manager
# it is run on the master(s).  Should be used only if interconnect is enabled.
kind: Deployment
apiVersion: apps/v1
metadata:
  name: ovnkube-control-plane
  # namespace set up by install
  namespace: ovn-kubernetes
  annotations:
    kubernetes.io/description: |
      This Deployment launches the ovn-kubernetes cluster manager networking component.
spec:
  progressDeadlineSeconds: 600
  replicas: {{ default 1 .Values.replicas }}
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      name: ovnkube-control-plane
  strategy:
    rollingUpdate:
      maxSurge: 0
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        name: ovnkube-control-plane
        component: network
        type: infra
        kubernetes.io/os: "linux"
    spec:
      {{- if .Values.global.imagePullSecretName }}
      imagePullSecrets:
      - name: {{ .Values.global.imagePullSecretName }}
      {{- end }}
      priorityClassName: "system-cluster-critical"
      # Requires fairly broad permissions - ability to read all services and network functions as well
      # as all pods.
      serviceAccountName: ovnkube-cluster-manager
      hostNetwork: true
      dnsPolicy: Default
      {{- if .Values.affinity }}
      affinity: {{ toYaml .Values.affinity | nindent 8 }}
      {{- end }}
      containers:
      - name: ovnkube-cluster-manager
        image: {{ include "getImage" . }}
        imagePullPolicy: {{ default "IfNotPresent" .Values.global.image.pullPolicy }}
        command: ["/root/ovnkube.sh", "ovn-cluster-manager"]
        securityContext:
          runAsUser: 0
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        # Run directories where we need to be able to access sockets
        - mountPath: /var/run/dbus/
          name: host-var-run-dbus
          readOnly: true
        - mountPath: /var/log/ovn-kubernetes/
          name: host-var-log-ovnkube
        - mountPath: /var/run/openvswitch/
          name: host-var-run-ovs
        - mountPath: /var/run/ovn/
          name: host-var-run-ovs
        - mountPath: /ovn-cert
          name: host-ovn-cert
          readOnly: true
        resources:
          requests:
            cpu: 100m
            memory: 300Mi
        env:
        - name: OVN_DAEMONSET_VERSION
          value: "1.0.0"
        - name: OVNKUBE_LOGLEVEL
          value: {{ default 4 .Values.logLevel | quote }}
        - name: OVNKUBE_LOGFILE_MAXSIZE
          value: {{ default 100 .Values.logFileMaxSize | quote }}
        - name: OVNKUBE_LOGFILE_MAXBACKUPS
          value: {{ default 5 .Values.logFileMaxBackups | quote }}
        - name: OVNKUBE_LOGFILE_MAXAGE
          value: {{ default 5 .Values.logFileMaxAgent | quote }}
        - name: OVNKUBE_CONFIG_DURATION_ENABLE
          value: {{ default "" .Values.global.enableConfigDuration | quote }}
        - name: OVN_NET_CIDR
          valueFrom:
            configMapKeyRef:
              name: ovn-config
              key: net_cidr
        - name: OVN_SVC_CIDR
          valueFrom:
            configMapKeyRef:
              name: ovn-config
              key: svc_cidr
        - name: K8S_APISERVER
          valueFrom:
            configMapKeyRef:
              name: ovn-config
              key: k8s_apiserver
        - name: K8S_NODE
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: K8S_NODE_IP
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        - name: OVN_KUBERNETES_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: OVN_HYBRID_OVERLAY_ENABLE
          value: {{ default "" .Values.global.enableHybridOverlay | quote }}
        - name: OVN_ADMIN_NETWORK_POLICY_ENABLE
          value: {{ default "" .Values.global.enableAdminNetworkPolicy | quote }}
        - name: OVN_EGRESSIP_ENABLE
          value: {{ default "" .Values.global.enableEgressIp | quote }}
        - name: OVN_EGRESSSERVICE_ENABLE
          value: {{ default "" .Values.global.enableEgressService | quote }}
        - name: OVN_EGRESSFIREWALL_ENABLE
          value: {{ default "" .Values.global.enableEgressFirewall | quote }}
        - name: OVN_EGRESSQOS_ENABLE
          value: {{ default "" .Values.global.enableEgressQos | quote }}
        - name: OVN_MULTI_NETWORK_ENABLE
          value: {{ hasKey .Values.global "enableMultiNetwork" | ternary .Values.global.enableMultiNetwork false | quote }}
        - name: OVN_HYBRID_OVERLAY_NET_CIDR
          value: {{ default "" .Values.global.hybridOverlayNetCidr | quote }}
        - name: OVN_DISABLE_SNAT_MULTIPLE_GWS
          value: {{ default "" .Values.global.disableSnatMultipleGws | quote }}
        - name: OVN_EMPTY_LB_EVENTS
          value: {{ default "" .Values.global.emptyLbEvents | quote }}
        - name: OVN_V4_JOIN_SUBNET
          value: {{ default "" .Values.global.v4JoinSubnet | quote }}
        - name: OVN_V6_JOIN_SUBNET
          value: {{ default "" .Values.global.v6JoinSubnet | quote }}
        - name: OVN_SSL_ENABLE
          value: {{ hasKey .Values.global "enableSsl" | ternary .Values.global.enableSsl false | quote }}
        - name: OVN_GATEWAY_MODE
          value: {{ default "shared" .Values.global.gatewayMode }}
        - name: OVN_MULTICAST_ENABLE
          value: {{ default "" .Values.global.enableMulticast | quote }}
        - name: OVN_ACL_LOGGING_RATE_LIMIT
          value: {{ default 20 .Values.global.aclLoggingRateLimit | quote }}
        - name: OVN_HOST_NETWORK_NAMESPACE
          valueFrom:
            configMapKeyRef:
              name: ovn-config
              key: host_network_namespace
        - name: OVN_ENABLE_INTERCONNECT
          value: {{ hasKey .Values.global "enableInterconnect" | ternary .Values.global.enableInterconnect false | quote }}
        - name: OVN_ENABLE_MULTI_EXTERNAL_GATEWAY
          value: {{ hasKey .Values.global "enableMultiExternalGateway" | ternary .Values.global.enableMultiExternalGateway false | quote }}
        - name: OVN_NETWORK_QOS_ENABLE
          value: {{ hasKey .Values.global "enableNetworkQos" | ternary .Values.global.enableNetworkQos false | quote }}
        - name: OVN_V4_TRANSIT_SWITCH_SUBNET
          value: {{ default "" .Values.global.v4TransitSwitchSubnet | quote }}
        - name: OVN_V6_TRANSIT_SWITCH_SUBNET
          value: {{ default "" .Values.global.v6TransitSwitchSubnet | quote }}
        - name: OVN_ENABLE_PERSISTENT_IPS
          value: {{ hasKey .Values.global "enablePersistentIPs" | ternary .Values.global.enablePersistentIPs false | quote }}
        - name: OVN_ENABLE_DNSNAMERESOLVER
          value: {{ hasKey .Values.global "enableDNSNameResolver" | ternary .Values.global.enableDNSNameResolver false | quote }}
      # end of container
      volumes:
      # TODO: Need to check why we need this?
      - name: host-var-run-dbus
        hostPath:
          path: /var/run/dbus
      - name: host-var-log-ovs
        hostPath:
          path: /var/log/openvswitch
      - name: host-var-log-ovnkube
        hostPath:
          path: /var/log/ovn-kubernetes
      - name: host-var-run-ovs
        hostPath:
          path: /var/run/openvswitch
      - name: host-ovn-cert
        hostPath:
          path: /etc/ovn
          type: DirectoryOrCreate
      tolerations:
      - operator: "Exists"
